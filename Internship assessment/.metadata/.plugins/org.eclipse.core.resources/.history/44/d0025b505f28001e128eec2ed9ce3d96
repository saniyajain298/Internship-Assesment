package com.springboot.test.service;

import java.io.IOException;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.springboot.test.entity.Answer;
import com.springboot.test.entity.Base64file;
import com.springboot.test.entity.Questions;
import com.springboot.test.entity.User;
import com.springboot.test.repository.AnswerRepository;
import com.springboot.test.repository.Base64filerepository;
import com.springboot.test.repository.QuestionRepository;
import com.springboot.test.repository.UserRepository;
import com.springboot.test.util.Container;
import com.springboot.test.util.FileUtils;

@Service
public class StorageService {
	
	
	@Autowired
	private Base64filerepository basefileRepo;
	
	@Autowired
	public UserRepository userrepo;
	
	@Autowired
	public AnswerRepository answerRepo; 
	
	@Autowired
	public QuestionRepository questionRepo;

	
	
	public <T> ResponseEntity<?> getRequest(Long userid, int questionNo,T ans) throws IOException{
		
		if(ans.getClass().equals("java.lang.String")) {
			String answer = ans.toString();
			if(questionNo ==1 && userid==0) {
				int getResponse= saveUserName(answer);
				return new ResponseEntity<Integer>(getResponse,HttpStatus.CREATED);
			}
			
			else if(questionNo ==2 && userid!=0) {
				saveEmail(answer, userid);
			}
			
			else if(questionNo == 4 && userid!=0) {
				String response = saveText(answer, userid);
				return new ResponseEntity<String>(response, HttpStatus.CREATED);
			}
			
			else if((questionNo>4 && questionNo<104 ) && userid!=0) {
				String response = saveAnswer(answer, userid, questionNo);
				return new ResponseEntity<String>(response, HttpStatus.CREATED);
			}
		}
		else if(ans.getClass().equals("org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile")) {
			MultipartFile answer = (MultipartFile) ans;
			saveFile(answer, userid);
			
		}
		HttpHeaders responseHeaders = new HttpHeaders();
		
		return new ResponseEntity<String>("Response", responseHeaders, HttpStatus.CREATED);
		
	}
	
//	public String getRequest(Long userid,int questionNo, MultipartFile answer ) throws IOException{
//		saveFile((MultipartFile) answer, userid);
//		return "Successfull";
//		
//	}
	
	
	
}
